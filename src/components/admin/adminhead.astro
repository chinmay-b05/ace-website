---
import { Image } from 'astro:assets';
import { getSession } from 'auth-astro/server';
import closeIcon from '@assets/icons/close.svg';
import menuIcon from '@assets/icons/menu.svg';
import { getUser } from 'utils/getUser';
const session = await getSession(Astro.request);
const user = await getUser(session?.user?.id as string);
---

<header class="header" transition:persist>
  <div class="content-container">
    <a href="/"><Image src="/images/logo.png" alt="ACE" class="h-16 w-auto" width={64} height={64} /></a>

    <input type="checkbox" id="check" />
    <label for="check" class="menu">
      <Image src={closeIcon} alt="menu" id="open-menu" class="h-8 w-6" width={32} height={24} />
      <Image src={menuIcon} alt="close" id="close-menu" class="h-8 w-6" width={32} height={24} />
    </label>
    <nav class="flex gap-10 navbar items-center md:justify-between whitespace-nowrap">
      <a href="/" class="nav-link">Home</a>
      <a href="admin/events" class="nav-link">Events</a>
      <a href="admin/approveBlog" class="nav-link">Approve Blogs</a>
      <a href="admin/manageUsers" class="nav-link">Manage Users</a>
      <a href="admin/uploadToGallery" class="nav-link">Upload To Gallery</a>
      
      {
        session ? (
          <div class="relative cursor-pointer profile-container" tabindex="0">
            <img src={user?.image} alt={session.user?.name} class="rounded-full w-8 aspect-square" />
            <div class="profile-dropdown flex flex-col gap-2 absolute p-4 rounded-md">
              <a href={`/profiles/${session.user?.id}`}>View Profile</a>
              <button id="logout">Logout</button>
            </div>
          </div>
        ) : (
          <button id="login">Login</button>
        )
      }
    </nav>
  </div>
</header>

<style>
  .header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 50;
  }
  .content-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
  }

  .header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #1418234f;
    backdrop-filter: blur(50px);
    z-index: -1;
  }

  .nav-link {
    text-transform: capitalize;
    position: relative;
    display: inline-block;
    padding-bottom: 4px;
    overflow: hidden;
  }

  .nav-link::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 3px;
    background: linear-gradient(to right, #00f, rgb(46, 144, 235));
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.3s ease-out;
    border-radius: 0 0 5px 5px;
  }

  .nav-link:hover::after {
    transform: scaleX(1);
  }

  .nav-link:hover {
    transform: scale(1.1);
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.6);
  }

  #check {
    display: none;
  }

  .menu {
    position: absolute;
    right: 5%;
    cursor: pointer;
    display: none;
  }

  @media (max-width: 560px) {
    .menu {
      display: inline-flex;
    }

    #check:checked ~ .menu #close-menu {
      display: none;
    }

    .menu #open-menu {
      display: block;
    }

    #check:checked ~ .menu #open-menu {
      display: block;
    }

    .menu #open-menu {
      display: none;
    }

    .navbar {
      position: absolute;
      top: 100%;
      left: 0;
      width: 100%;
      height: 0;
      flex-direction: column;
      align-content: center;
      background-color: rgba(41, 41, 41, 0.1);
      backdrop-filter: blur(40px);
      gap: 1rem;
      overflow: hidden;
      transition: 0.3s ease;
    }

    #check:checked ~ .navbar {
      padding: 4rem 0 4rem 0;
      height: 100vh;
    }

    .nav-link {
      display: block;
      align-self: center;
      text-align: center;
    }
  }

  .profile-container:focus-within .profile-dropdown {
    opacity: 1;
    pointer-events: auto;
  }

  .profile-dropdown {
    opacity: 0;
    pointer-events: none;
    box-shadow: rgba(2, 25, 71, 0.1) 0px 0.175em 0.5em;
    background-color: rgba(61, 61, 62, 0.385);
    transform: translateX(-20%) translateY(8%);
    transition: opacity 0.15s ease-out;
  }
</style>

<script>
  const { signIn, signOut } = await import('auth-astro/client');
  document.querySelector<HTMLButtonElement>('#login')?.addEventListener('click', () => {
    signIn('google');
  });
  document.querySelector<HTMLButtonElement>('#logout')?.addEventListener('click', async () => await signOut());
</script>