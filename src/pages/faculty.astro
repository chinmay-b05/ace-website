---
import Layout from '@layouts/Layout.astro';
import sample from '../assets/images/sample.png';
import { faculty } from '@lib/constants';
import { Image } from 'astro:assets';

const images: { [index: string]: any } = {};
await Astro.glob('/src/assets/images/team/faculty/*.webp').then((files) => {
  files.forEach((file) => {
    const name = file.default.src.split('.')[0].split('/').pop();
    images[name] = file.default;
  });
  //fallback image
  images['sample'] = sample;
});
---

<Layout title="ACE">
  <main class="content-container">
    <div class="mt-32 flex flex-col gap-8 items-center">
      <h2 class="fade-up uppercase text-6xl text-center font-dirtyline">Faculty</h2>
      <div class="flex flex-wrap gap-32 justify-center">
        {
          faculty.map((member) => {
            return (
              <div class="card  w-[300px] grid grid-rows-10 rounded-2xl  h-max gap-2">
                <div class="row-span-6 row-start-1 grid place-content-center p-12 pb-0">
                  <Image
                    src={images[member.image]}
                    alt={member.name}
                    loading="lazy"
                    class="w-[200px] aspect-square rounded-full object-cover object-center"
                    style={{ objectPosition: 'top' }}
                    width={300}
                    height={300}
                  />
                </div>

                <div class="content w-full row-start-7 row-span-4">
                  <h3 class="uppercase font-bold text-lg">{member.name}</h3>
                  <span>{member.position}</span>
                </div>
              </div>
            );
          })
        }
      </div>
    </div>
  </main>
</Layout>

<style>
  @keyframes fadeInUp {
    0% {
      opacity: 0;
      transform: translateY(50px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .card {
    background: linear-gradient(
      45deg,
      #64cfe243 40%,
      rgba(6, 100, 252, 0.414),
      rgba(6, 100, 252, 0.317) 60%,
      transparent
    );
    opacity: 0;
    background-size: 200% 200%;
    background-position: 100% 0;
    transition: background-position 0.4s ease-in-out;
  }

  .card.show {
    animation: fadeInUp 0.6s forwards;
  }

  .card.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .card .content {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    backdrop-filter: blur(15px);
    box-shadow: 0 -10px 10px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 15px;
    text-align: center;
  }
</style>

<script>
  const cards = document.querySelectorAll('.card');

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('show');
        }
      });
    },
    {
      threshold: 0.1,
    }
  );

  cards.forEach((card) => {
    observer.observe(card);
  });
</script>
